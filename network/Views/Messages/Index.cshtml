@using network.Views.ViewModels;
@model List<IndexConversationViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="navbar-header">
    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
    </button>
</div>


<nav class="navbar navbar-inverse" role="navigation">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-sidebar-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>


        <div class="collapse navbar-collapse" id="bs-sidebar-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li id="selectRec"><a href=#>Search <span style="font-size:16px;" class="pull-right hidden-xs showopacity glyphicon glyphicon-search"></span></a></li>
                
            </ul>
        </div>


    </div>
</nav>


<div class="jumbotron container-fluid">

    <div class="row page" align="center">
        Conversations
    </div>

    @if (Model.Count>0)
    {
        foreach (var item in Model)
        {
        <div class="row chatId">           
                <div class="row">

                        <div class="col-md-4">
                            @if (item != null)
                                {
                                    <img class="avatar" src="@String.Format("data:image/jpg;base64,{0}", item.Conversation.Image)"  />
                                }
                            else
                                {
                                    <img class="avatar" style="border:solid;" src="@Url.Content("~/Content/Pictures/no.jpg")" />
                                }
                          </div>

                            <div class="col-md-2 nameFirstname">
                                <a href="@Url.Action("OpenConversation","Messages",new {Conversation_id = item.Conversation_id})">
                                    @Html.DisplayFor(modelItem => item.Conversation.FirstName)
                                    @Html.DisplayFor(modelItem => item.Conversation.LastName)
                                </a>
                            </div>

                    <div class="col-md-2 btn-group">                                        
                        <button class="btn dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button>
                        <ul class="dropdown-menu">    
                            <li>Remove conversation</li>                     
                        </ul>
                    </div>

                    <div class="col-md-2">
                        New messages
                    </div>
                </div>
          </div>
        }
    }       
</div>




<div id="selectMod" class="modal fade" data-url='@Url.Action("SelectReceiver","Messages",null)'>
    <div id="selectContainer">
    </div>
</div>



@section Scripts{
    <script type="text/javascript">
        $(function() {
            $('#selectRec').click(function() {
                var url = $('#selectMod').data('url');


                $.get(url,
                    function(data) {
                        $('#selectContainer').html(data);

                        $('#selectMod').modal('show');

                        $('.beginChat').click(function() {
                            var receiverId = $(this).data('id');

                            $.ajax({
                                url: '@Url.Action("SelectReceiver", "Messages")',
                                type: 'POST',
                                data: {
                                    'receiverId': receiverId
                                },

                                dataType: "json",
                                success: function(response) {
                                    $('#selectMod').modal('hide');
                                    debugger;

                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    debugger;
                                    $('#selectMod').modal('hide');
                                }
                            });
                        });
                    });
            });

            $(".chatId").bind({
                'mouseover': function () { $(this).css("background-color", "#cccccc"); },
                'mouseout': function () { $(this).css("background-color", "transparent"); },
            });

        });
    </script>
}