@model IEnumerable<network.Views.ViewModels.ShowUserViewModel>

<nav class="navbar navbar-inverse" role="navigation">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-sidebar-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>


        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-sidebar-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li>@{ Html.RenderAction("CountRequests", "Friendship"); }<a href="@Url.Action("NewRequest","Friendship")">Show new friends<span style="font-size:16px;" class="pull-right hidden-xs showopacity glyphicon glyphicon-user"></span></a></li>
            </ul>
        </div>
    </div>
</nav>

<div class="jumbotron container-fluid">
    <div class="row page" align="center">
        Friends
        <hr />
    </div>  
           
        <div class="scrolFriends ">
            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="row">
                        @if (item.Image.Length != 0)
                        {
                        <div class="col-lg-6">
                            <img class="image" src="data:image/png;base64, @Convert.ToBase64String(item.Image)"
                             />
                        </div>
                        }
                        else
                        {
                            <div class="col-lg-6">
                                <img class="image" src="@Url.Content("~/Content/Pictures/no.jpg")" />
                            </div>
                        }

                        <div class="col-md-5">
                        <a href="@Url.Action("UsersPage", "Users", new { id = item.Id }, null)" class="nameFirstname">
                            @Html.DisplayFor(modelItem => item.Name)
                            @Html.DisplayFor(modelItem => item.Firstname)
                        </a>
                            </div>
                        
                        <div class="col-md-1 btn-group">
                            <button class="btn">...</button>
                            <button class="btn dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Show friends", "FriendsOfFriends", "Friendship", new { id = item.Id }, null)</li>
                                <li class="divider"></li>
                                <li><input type="button" class="button-del" id="openModal" value="Delete friend" /></li>

                            </ul>
                        </div>
                                             

                        <div id="deletFr" class="modal fade" data-url='@Url.Action("Delete", "Friendship", new { id = item.Id })'>
                            <div id="deletFrContainer">

                            </div>
                        </div>                       
                    </div>
                    <hr />
                }                                    
             </div>
    </div>

</div>



@section Scripts{
    <script type="text/javascript">
        $(function() {
            $('#openModal').click(function() {
                var url = $('#deletFr').data('url');

                $.get(url,
                    function(data) {
                        $('#deletFrContainer').html(data);

                        $('#deletFr').modal('show');
                    });
            });
        });
    </script>
}


